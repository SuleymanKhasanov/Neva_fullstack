// backend/src/app.module.ts
import { join } from 'path';

import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';
import { CacheModule } from '@nestjs/cache-manager';
import { Module } from '@nestjs/common';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { GraphQLModule } from '@nestjs/graphql';
import { ServeStaticModule } from '@nestjs/serve-static';
import * as redisStore from 'cache-manager-redis-store';

import { PrismaService } from '../prisma/prisma.service';

// –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏
import { AdminEnhancedModule } from './admin/admin-enhanced.module'; // üÜï
import { AdminModule } from './admin/admin.module';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { AuthModule } from './auth/auth.module';
import { BrandsModule } from './brands/brands.module';
import { CategoriesEnhancedModule } from './categories/categories-enhanced.module';
import { CategoriesModule } from './categories/categories.module';
import { CacheServiceModule } from './common/cache.module';
import { ProductModule } from './product/product.module';
import { NevaProductsModule } from './products/products.module';

// üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è

// –ê–¥–º–∏–Ω –º–æ–¥—É–ª–∏

// üÜï –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø—É–±–ª–∏—á–Ω—ã–µ –º–æ–¥—É–ª–∏

@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true,
      envFilePath: ['.env.local', '.env'],
    }),
    CacheModule.registerAsync({
      isGlobal: true,
      imports: [ConfigModule],
      useFactory: async (configService: ConfigService) => ({
        store: redisStore,
        host: configService.get('REDIS_HOST', 'redis'),
        port: parseInt(configService.get('REDIS_PORT', '6379')),
        ttl: parseInt(configService.get('CACHE_TTL', '300')),
        max: parseInt(configService.get('CACHE_MAX_ITEMS', '1000')),
        retryDelayOnFailover: 100,
        maxRetriesPerRequest: 3,
        lazyConnect: true,
      }),
      inject: [ConfigService],
    }),
    GraphQLModule.forRoot<ApolloDriverConfig>({
      driver: ApolloDriver,
      autoSchemaFile: 'schema.gql',
      sortSchema: true,
      introspection: process.env.NODE_ENV !== 'production',
      playground: process.env.NODE_ENV !== 'production',
    }),
    ServeStaticModule.forRoot({
      rootPath: join(__dirname, '..', '..', 'public'),
      serveRoot: '/public',
    }),

    // –û–±—â–∏–µ –º–æ–¥—É–ª–∏
    CacheServiceModule,
    AuthModule, // üîê JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è

    // üåê –ü—É–±–ª–∏—á–Ω—ã–µ API –º–æ–¥—É–ª–∏
    NevaProductsModule, // –ü—Ä–æ–¥—É–∫—Ç—ã (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)
    ProductModule, // –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    CategoriesModule, // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)
    CategoriesEnhancedModule, // üÜï –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    BrandsModule, // –ë—Ä–µ–Ω–¥—ã

    // üîí –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –º–æ–¥—É–ª–∏
    AdminModule, // –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∞–¥–º–∏–Ω–∫–∞
    AdminEnhancedModule, // üÜï –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω–∫–∞ —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
  ],
  controllers: [AppController],
  providers: [AppService, PrismaService],
})
export class AppModule {
  constructor() {
    console.log('üöÄ NevaBackend initialized with enhanced categories support!');
    console.log('');
    console.log('üìã Available API endpoints:');
    console.log('');
    console.log('üåê PUBLIC APIs (no auth required):');
    console.log('  üì¶ Products:');
    console.log('    GET /products/all                     - –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã');
    console.log('    GET /products/neva                    - NEVA –ø—Ä–æ–¥—É–∫—Ç—ã');
    console.log(
      '    GET /products/x-solution              - X-SOLUTION –ø—Ä–æ–¥—É–∫—Ç—ã'
    );
    console.log('    GET /product/:locale/:id              - –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞');
    console.log(
      '    GET /product/:locale/:id/exists       - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è'
    );
    console.log('');
    console.log('  üè∑Ô∏è Categories (Basic):');
    console.log(
      '    GET /categories/all                   - –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –±—Ä–µ–Ω–¥–∞–º–∏'
    );
    console.log('    GET /categories/neva                  - NEVA –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    console.log(
      '    GET /categories/x-solution            - X-SOLUTION –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
    );
    console.log('');
    console.log('  ‚ú® Categories Enhanced (with subcategories):');
    console.log(
      '    GET /categories-enhanced/all          - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏'
    );
    console.log(
      '    GET /categories-enhanced/neva         - NEVA —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏'
    );
    console.log(
      '    GET /categories-enhanced/x-solution   - X-SOLUTION —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏'
    );
    console.log(
      '    GET /categories-enhanced/:id/subcategories - –°—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
    );
    console.log('');
    console.log('  üè¢ Brands:');
    console.log('    GET /brands/all                       - –í—Å–µ –±—Ä–µ–Ω–¥—ã');
    console.log('    GET /brands/neva                      - NEVA –±—Ä–µ–Ω–¥—ã');
    console.log(
      '    GET /brands/x-solution                - X-SOLUTION –±—Ä–µ–Ω–¥—ã'
    );
    console.log('');
    console.log('üîê AUTHENTICATION:');
    console.log(
      '    POST /auth/login                      - –í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å'
    );
    console.log(
      '    POST /auth/refresh                    - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞'
    );
    console.log(
      '    GET  /auth/profile                    - –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
    );
    console.log('    GET  /auth/check                      - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞');
    console.log('');
    console.log('üîí ADMIN APIs (JWT auth required):');
    console.log('  üì¶ Products Management:');
    console.log(
      '    Basic: /admin/products/*              - –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã'
    );
    console.log(
      '    Enhanced: /admin/products-enhanced/*  - üÜï –° –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π'
    );
    console.log('');
    console.log('  üè∑Ô∏è Categories & Subcategories:');
    console.log(
      '    Basic: /admin/categories/*            - –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
    );
    console.log(
      '    Enhanced: /admin/categories-enhanced/* - üÜï –° —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏'
    );
    console.log('');
    console.log('  üè¢ Brands:');
    console.log(
      '    /admin/brands/*                       - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–µ–Ω–¥–∞–º–∏'
    );
    console.log('');
    console.log('  üóëÔ∏è Cache Management:');
    console.log('    /admin/cache/*                        - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–µ—à–µ–º');
    console.log('');
    console.log('üìö Documentation:');
    console.log('  Swagger UI: http://localhost:3000/api-docs');
    console.log('  GraphQL Playground: http://localhost:3000/graphql');
    console.log('');
    console.log('üåç Supported Locales: ru, en, kr, uz');
    console.log('‚ö° Redis caching enabled for all APIs');
    console.log('üîê JWT authentication for admin endpoints');
  }
}
