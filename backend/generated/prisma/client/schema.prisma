// backend/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Section {
  NEVA
  X_SOLUTION
}

enum Locale {
  ru
  en
  kr
  uz
}

// ==================== –ê–î–ú–ò–ù–°–ö–ò–ï –¢–ê–ë–õ–ò–¶–´ (–ü–†–ò–í–ê–¢–ù–´–ï) ====================

// –ê–¥–º–∏–Ω—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ –±—Ä–µ–Ω–¥–æ–≤
model AdminBrand {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  translations   AdminBrandTranslation[]
  categoryBrands AdminCategoryBrand[]

  @@map("admin_brands")
}

// –ü–µ—Ä–µ–≤–æ–¥—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö –±—Ä–µ–Ω–¥–æ–≤
model AdminBrandTranslation {
  id        Int      @id @default(autoincrement())
  brandId   Int      @map("brand_id")
  locale    Locale
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  brand AdminBrand @relation(fields: [brandId], references: [id], onDelete: Cascade)

  @@unique([brandId, locale])
  @@map("admin_brand_translations")
}

// –ê–¥–º–∏–Ω—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
model AdminCategory {
  id        Int      @id @default(autoincrement())
  section   Section
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  translations   AdminCategoryTranslation[]
  subcategories  AdminSubcategory[]
  categoryBrands AdminCategoryBrand[]

  @@map("admin_categories")
}

// –ü–µ—Ä–µ–≤–æ–¥—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
model AdminCategoryTranslation {
  id         Int      @id @default(autoincrement())
  categoryId Int      @map("category_id")
  locale     Locale
  name       String   @db.VarChar(255)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  category AdminCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([categoryId, locale])
  @@map("admin_category_translations")
}

// –ê–¥–º–∏–Ω—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π
model AdminSubcategory {
  id         Int      @id @default(autoincrement())
  categoryId Int      @map("category_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  category     AdminCategory                 @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  translations AdminSubcategoryTranslation[]

  @@map("admin_subcategories")
}

// –ü–µ—Ä–µ–≤–æ–¥—ã –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π
model AdminSubcategoryTranslation {
  id            Int      @id @default(autoincrement())
  subcategoryId Int      @map("subcategory_id")
  locale        Locale
  name          String   @db.VarChar(255)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  subcategory AdminSubcategory @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)

  @@unique([subcategoryId, locale])
  @@map("admin_subcategory_translations")
}

// Many-to-many —Å–≤—è–∑—å –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –±—Ä–µ–Ω–¥–æ–≤
model AdminCategoryBrand {
  id         Int      @id @default(autoincrement())
  categoryId Int      @map("category_id")
  brandId    Int      @map("brand_id")
  section    Section
  createdAt  DateTime @default(now()) @map("created_at")

  // –°–≤—è–∑–∏
  category AdminCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  brand    AdminBrand    @relation(fields: [brandId], references: [id], onDelete: Cascade)

  @@unique([categoryId, brandId, section])
  @@map("admin_category_brands")
}

// ==================== –ü–£–ë–õ–ò–ß–ù–´–ï –¢–ê–ë–õ–ò–¶–´ ====================

// –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –±—Ä–µ–Ω–¥–æ–≤
model Brand {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  translations   BrandTranslation[]
  products       Product[]
  categoryBrands CategoryBrand[]

  @@map("brands")
}

// –ü–µ—Ä–µ–≤–æ–¥—ã –±—Ä–µ–Ω–¥–æ–≤
model BrandTranslation {
  id        Int      @id @default(autoincrement())
  brandId   Int      @map("brand_id")
  locale    Locale
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  brand Brand @relation(fields: [brandId], references: [id], onDelete: Cascade)

  @@unique([brandId, locale])
  @@map("brand_translations")
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
model Category {
  id        Int      @id @default(autoincrement())
  section   Section
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  translations   CategoryTranslation[]
  subcategories  Subcategory[]
  products       Product[]
  categoryBrands CategoryBrand[]

  @@map("categories")
}

// –ü–µ—Ä–µ–≤–æ–¥—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
model CategoryTranslation {
  id         Int      @id @default(autoincrement())
  categoryId Int      @map("category_id")
  locale     Locale
  name       String   @db.VarChar(255)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([categoryId, locale])
  @@map("category_translations")
}

// üÜï –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π
model Subcategory {
  id         Int      @id @default(autoincrement())
  categoryId Int      @map("category_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  category     Category                 @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  translations SubcategoryTranslation[]
  products     Product[]

  @@map("subcategories")
}

// üÜï –ü–µ—Ä–µ–≤–æ–¥—ã —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π
model SubcategoryTranslation {
  id            Int      @id @default(autoincrement())
  subcategoryId Int      @map("subcategory_id")
  locale        Locale
  name          String   @db.VarChar(255)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  subcategory Subcategory @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)

  @@unique([subcategoryId, locale])
  @@map("subcategory_translations")
}

// Many-to-many —Å–≤—è–∑—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –±—Ä–µ–Ω–¥–æ–≤
model CategoryBrand {
  id         Int      @id @default(autoincrement())
  categoryId Int      @map("category_id")
  brandId    Int      @map("brand_id")
  section    Section
  createdAt  DateTime @default(now()) @map("created_at")

  // –°–≤—è–∑–∏
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  brand    Brand    @relation(fields: [brandId], references: [id], onDelete: Cascade)

  @@unique([categoryId, brandId, section])
  @@map("category_brands")
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
model Product {
  id            Int      @id @default(autoincrement())
  brandId       Int?     @map("brand_id")
  categoryId    Int      @map("category_id")
  subcategoryId Int?     @map("subcategory_id") // üÜï –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è
  section       Section
  slug          String?  @db.VarChar(255)
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  brand          Brand?                 @relation(fields: [brandId], references: [id], onDelete: SetNull)
  category       Category               @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  subcategory    Subcategory?           @relation(fields: [subcategoryId], references: [id], onDelete: SetNull) // üÜï
  translations   ProductTranslation[]
  images         ProductImage[]
  specifications ProductSpecification[]

  @@map("products")
}

// –ü–µ—Ä–µ–≤–æ–¥—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤
model ProductTranslation {
  id                   Int      @id @default(autoincrement())
  productId            Int      @map("product_id")
  locale               Locale
  name                 String   @db.VarChar(500)
  description          String?  @db.Text
  marketingDescription String?  @map("marketing_description") @db.Text
  metaTitle            String?  @map("meta_title") @db.VarChar(255)
  metaDescription      String?  @map("meta_description") @db.VarChar(255)
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, locale])
  @@map("product_translations")
}

// –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
model ProductImage {
  id               Int      @id @default(autoincrement())
  productId        Int      @map("product_id")
  originalFilename String   @map("original_filename") @db.VarChar(255)
  imageSmall       String   @map("image_small") @db.VarChar(255)
  imageLarge       String   @map("image_large") @db.VarChar(255)
  altText          String?  @map("alt_text") @db.VarChar(255)
  sortOrder        Int      @default(0) @map("sort_order")
  isPrimary        Boolean  @default(false) @map("is_primary")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_images")
}

// –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
model ProductSpecification {
  id        Int      @id @default(autoincrement())
  productId Int      @map("product_id")
  specKey   String   @map("spec_key") @db.VarChar(255)
  sortOrder Int      @default(0) @map("sort_order")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  product      Product                           @relation(fields: [productId], references: [id], onDelete: Cascade)
  translations ProductSpecificationTranslation[]

  @@unique([productId, specKey])
  @@map("product_specifications")
}

// –ü–µ—Ä–µ–≤–æ–¥—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
model ProductSpecificationTranslation {
  id              Int      @id @default(autoincrement())
  specificationId Int      @map("specification_id")
  locale          Locale
  name            String   @db.VarChar(255)
  value           String   @db.Text
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // –°–≤—è–∑–∏
  specification ProductSpecification @relation(fields: [specificationId], references: [id], onDelete: Cascade)

  @@unique([specificationId, locale])
  @@map("product_specification_translations")
}
