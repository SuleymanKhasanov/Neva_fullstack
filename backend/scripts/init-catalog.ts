// backend/scripts/init-catalog.ts
import { existsSync, mkdirSync, writeFileSync } from 'fs';
import { join } from 'path';

class CatalogInitializer {
  private readonly dataDir = join(process.cwd(), 'data');
  private readonly catalogFile = join(this.dataDir, 'catalog_json.json');

  async initialize(): Promise<void> {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ç–∞–ª–æ–≥–∞...');

    try {
      // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      this.ensureDataDirectory();

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä JSON —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      this.createSampleCatalogFile();

      console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      this.printInstructions();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
      throw error;
    }
  }

  private ensureDataDirectory(): void {
    if (!existsSync(this.dataDir)) {
      mkdirSync(this.dataDir, { recursive: true });
      console.log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: ${this.dataDir}`);
    } else {
      console.log(`üìÅ –ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${this.dataDir}`);
    }
  }

  private createSampleCatalogFile(): void {
    if (!existsSync(this.catalogFile)) {
      const sampleData = this.generateSampleCatalog();
      writeFileSync(
        this.catalogFile,
        JSON.stringify(sampleData, null, 2),
        'utf-8'
      );
      console.log(`üìÑ –°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä –∫–∞—Ç–∞–ª–æ–≥–∞: ${this.catalogFile}`);
    } else {
      console.log(`üìÑ –§–∞–π–ª –∫–∞—Ç–∞–ª–æ–≥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${this.catalogFile}`);
    }
  }

  private generateSampleCatalog(): any {
    return {
      categories: [
        {
          id: 1,
          name: {
            ru: '–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
            en: 'Server Equipment',
            uz: 'Server uskunalari',
            ko: 'ÏÑúÎ≤Ñ Ïû•ÎπÑ',
          },
          subcategories: [
            {
              id: 101,
              name: {
                ru: '–°–µ—Ä–≤–µ—Ä—ã',
                en: 'Servers',
                uz: 'Serverlar',
                ko: 'ÏÑúÎ≤Ñ',
              },
              brands: [
                'Dell PowerEdge',
                'HPE ProLiant',
                'Lenovo ThinkSystem',
                'IBM Power Systems',
                'Cisco UCS',
              ],
            },
            {
              id: 102,
              name: {
                ru: '–°–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
                en: 'Data Storage Systems',
                uz: "Ma'lumotlarni saqlash tizimlari",
                ko: 'Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• ÏãúÏä§ÌÖú',
              },
              brands: [
                'Dell EMC',
                'NetApp',
                'HPE Storage',
                'IBM Storage',
                'Pure Storage',
              ],
            },
          ],
        },
        {
          id: 2,
          name: {
            ru: '–°–µ—Ç–µ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
            en: 'Network Equipment',
            uz: 'Tarmoq uskunalari',
            ko: 'ÎÑ§Ìä∏ÏõåÌÅ¨ Ïû•ÎπÑ',
          },
          subcategories: [
            {
              id: 201,
              name: {
                ru: '–ö–æ–º–º—É—Ç–∞—Ç–æ—Ä—ã',
                en: 'Switches',
                uz: 'Kommutatorlar',
                ko: 'Ïä§ÏúÑÏπò',
              },
              brands: [
                'Cisco',
                'HPE Aruba',
                'Juniper Networks',
                'D-Link',
                'TP-Link',
              ],
            },
            {
              id: 202,
              name: {
                ru: '–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä—ã',
                en: 'Routers',
                uz: 'Marshrutizatorlar',
                ko: 'ÎùºÏö∞ÌÑ∞',
              },
              brands: [
                'Cisco',
                'MikroTik',
                'Juniper Networks',
                'TP-Link',
                'Ubiquiti',
              ],
            },
          ],
        },
        {
          id: 11,
          name: {
            ru: '–ö–∞–Ω—Ü—Ç–æ–≤–∞—Ä—ã',
            en: 'Office Supplies',
            uz: 'Kantselyariya tovarlari',
            ko: 'ÏÇ¨Î¨¥Ïö©Ìíà',
          },
          subcategories: [
            {
              id: 1101,
              name: {
                ru: '–†—É—á–∫–∏',
                en: 'Pens',
                uz: 'Ruchkalar',
                ko: 'Ìéú',
              },
              brands: ['Parker', 'Pilot', 'Uniball', 'Bic'],
            },
            {
              id: 1102,
              name: {
                ru: '–ö–∞—Ä–∞–Ω–¥–∞—à–∏',
                en: 'Pencils',
                uz: 'Qalamlar',
                ko: 'Ïó∞ÌïÑ',
              },
              brands: ['Faber-Castell', 'Staedtler', 'Dixon'],
            },
          ],
        },
      ],
    };
  }

  private printInstructions(): void {
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('');
    console.log('1. üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –∫–∞—Ç–∞–ª–æ–≥–∞:');
    console.log(`   ${this.catalogFile}`);
    console.log('');
    console.log('2. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:');
    console.log('   yarn catalog:validate');
    console.log('');
    console.log('3. üì• –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:');
    console.log(
      '   yarn catalog:parse           # –î–æ–±–∞–≤–∏—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –¥–∞–Ω–Ω—ã–º'
    );
    console.log(
      '   yarn catalog:parse:clean     # –û—á–∏—Å—Ç–∏—Ç—å –ë–î –∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å'
    );
    console.log('');
    console.log('4. üì§ –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ:');
    console.log('   yarn catalog:export');
    console.log('');
    console.log('üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: backend/scripts/README_CATALOG.md');
  }

  async checkEnvironment(): Promise<void> {
    console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    try {
      require('@prisma/client');
      console.log('‚úÖ Prisma Client –Ω–∞–π–¥–µ–Ω');
    } catch {
      console.warn('‚ö†Ô∏è  Prisma Client –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: yarn install');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!process.env.DATABASE_URL) {
      console.warn('‚ö†Ô∏è  DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
    } else {
      console.log('‚úÖ DATABASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ë–î (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)
    console.log(
      'üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: yarn prisma:status'
    );
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  const initializer = new CatalogInitializer();

  try {
    await initializer.checkEnvironment();
    await initializer.initialize();
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON');
  console.log('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫ –∏ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤\n');

  main()
    .then(() => {
      console.log('\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nüí• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}
