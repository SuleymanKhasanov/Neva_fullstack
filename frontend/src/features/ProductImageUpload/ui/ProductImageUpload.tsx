// frontend/src/features/ProductImageUpload/ui/ProductImageUpload.tsx
'use client';

import React, { useRef } from 'react';
import { TranslationType } from '@/shared/config/i18n/types';
import styles from './ProductImageUpload.module.css';

interface ProductImageUploadProps {
  images: File[];
  onChange: (images: File[]) => void;
  error?: string;
  disabled?: boolean;
  maxImages?: number;
  locale: string;
  messages: TranslationType;
}

const ALLOWED_TYPES = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];
const MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB

export const ProductImageUpload: React.FC<ProductImageUploadProps> = ({
  images,
  onChange,
  error,
  disabled = false,
  maxImages = 5,
}) => {
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = Array.from(event.target.files || []);
    if (files.length === 0) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ñ–∞–π–ª–æ–≤
    const totalFiles = images.length + files.length;
    if (totalFiles > maxImages) {
      alert(`–ú–∞–∫—Å–∏–º—É–º ${maxImages} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –∏ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤
    const validFiles: File[] = [];
    const errors: string[] = [];

    files.forEach((file) => {
      if (!ALLOWED_TYPES.includes(file.type)) {
        errors.push(`${file.name}: –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç`);
        return;
      }

      if (file.size > MAX_FILE_SIZE) {
        errors.push(`${file.name}: —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä (–º–∞–∫—Å. 10MB)`);
        return;
      }

      validFiles.push(file);
    });

    if (errors.length > 0) {
      alert('–û—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤:\n' + errors.join('\n'));
    }

    if (validFiles.length > 0) {
      onChange([...images, ...validFiles]);
    }

    // –°–±—Ä–æ—Å input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Ç–µ—Ö –∂–µ —Ñ–∞–π–ª–æ–≤
    if (fileInputRef.current) {
      fileInputRef.current.value = '';
    }
  };

  const handleRemoveImage = (index: number) => {
    const newImages = images.filter((_, i) => i !== index);
    onChange(newImages);
  };

  const handleDrop = (event: React.DragEvent) => {
    event.preventDefault();
    if (disabled) return;

    const files = Array.from(event.dataTransfer.files);
    if (files.length > 0) {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ input
      const fileInput = fileInputRef.current;
      if (fileInput) {
        const dataTransfer = new DataTransfer();
        files.forEach((file) => dataTransfer.items.add(file));
        fileInput.files = dataTransfer.files;
        handleFileSelect({
          target: fileInput,
        } as React.ChangeEvent<HTMLInputElement>);
      }
    }
  };

  const handleDragOver = (event: React.DragEvent) => {
    event.preventDefault();
  };

  const openFileDialog = () => {
    if (!disabled && fileInputRef.current) {
      fileInputRef.current.click();
    }
  };

  const canAddMore = images.length < maxImages;

  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <h3 className={styles.title}>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞</h3>
        <p className={styles.description}>
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç 1 –¥–æ {maxImages} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (JPEG, PNG, WebP, GIF, –º–∞–∫—Å.
          10MB)
        </p>
      </div>

      {/* –û–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {canAddMore && (
        <div
          className={`${styles.uploadArea} ${disabled ? styles.disabled : ''}`}
          onDrop={handleDrop}
          onDragOver={handleDragOver}
          onClick={openFileDialog}
        >
          <div className={styles.uploadContent}>
            <div className={styles.uploadIcon}>üì∏</div>
            <div className={styles.uploadText}>
              <p className={styles.mainText}>
                –ù–∞–∂–º–∏—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—é–¥–∞
              </p>
              <p className={styles.subText}>
                {images.length > 0
                  ? `–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ ${maxImages - images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`
                  : `–î–æ ${maxImages} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`}
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –°–∫—Ä—ã—Ç—ã–π input */}
      <input
        ref={fileInputRef}
        type="file"
        multiple
        accept={ALLOWED_TYPES.join(',')}
        onChange={handleFileSelect}
        disabled={disabled}
        style={{ display: 'none' }}
      />

      {/* –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      {images.length > 0 && (
        <div className={styles.imagesGrid}>
          {images.map((image, index) => (
            <div key={index} className={styles.imageItem}>
              <div className={styles.imageWrapper}>
                <img
                  src={URL.createObjectURL(image)}
                  alt={`Preview ${index + 1}`}
                  className={styles.previewImage}
                  loading="lazy"
                />
                <button
                  type="button"
                  onClick={() => handleRemoveImage(index)}
                  className={styles.removeButton}
                  disabled={disabled}
                  title="–£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
                >
                  ‚úï
                </button>
                {index === 0 && (
                  <div className={styles.primaryBadge}>–û—Å–Ω–æ–≤–Ω–æ–µ</div>
                )}
              </div>
              <div className={styles.imageInfo}>
                <p className={styles.imageName}>{image.name}</p>
                <p className={styles.imageSize}>
                  {Math.round(image.size / 1024)} KB
                </p>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
      {canAddMore && images.length > 0 && (
        <button
          type="button"
          onClick={openFileDialog}
          className={styles.addMoreButton}
          disabled={disabled}
        >
          + –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        </button>
      )}

      {/* –°—Ç–∞—Ç—É—Å –∏ –æ—à–∏–±–∫–∏ */}
      <div className={styles.status}>
        <span className={styles.count}>
          {images.length}/{maxImages} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        </span>
        {images.length >= 1 && (
          <span className={styles.success}>‚úì –ú–∏–Ω–∏–º—É–º –≤—ã–ø–æ–ª–Ω–µ–Ω</span>
        )}
      </div>

      {error && <div className={styles.error}>{error}</div>}

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
      <div className={styles.hints}>
        <h4 className={styles.hintsTitle}>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
        <ul className={styles.hintsList}>
          <li>–ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞–Ω–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–º</li>
          <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞</li>
          <li>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: –æ—Ç 800x600 –ø–∏–∫—Å–µ–ª–µ–π</li>
          <li>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã</li>
        </ul>
      </div>
    </div>
  );
};
