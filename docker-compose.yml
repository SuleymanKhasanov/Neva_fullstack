services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - ./backend/public/images:/app/backend/public/images
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/neva
      - PRISMA_CLIENT_OUTPUT=/app/backend/generated/prisma/client
    env_file:
      - backend/.env
    command: >
      sh -c "cd /app/backend &&
             npx prisma generate &&
             npx prisma migrate deploy &&
             yarn ts-node scripts/mergeAndProcessData.ts &&
             yarn start:dev"
    networks:
      - neva-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=neva
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d neva']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - neva-network

  adminer:
    image: adminer
    ports:
      - '8080:8080'
    depends_on:
      - db
    networks:
      - neva-network

volumes:
  images:
  db_data:

networks:
  neva-network:
    driver: bridge
